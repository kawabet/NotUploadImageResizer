{"version":3,"sources":["../../index.js","js/path_to_file.js"],"names":["base64ToFile","src","resize","name","canvas","document","createElement","context","getContext","image","Image","type","substring","indexOf","replace","Promise","resolve","reject","onload","ratio","width","height","drawImage","base64","toDataURL","barr","bin","i","len","atob","split","length","Uint8Array","charCodeAt","Date","now","file","File","onerror","e","pathToFile","match","name_ext","ext","lastIndexOf","console","log","targetElement","querySelector","then","res"],"mappings":";;ACAA;;AAEA,IAAM+C,aAAa,GAAG1C,QAAQ,CAAC2C,aAAT,CAAuB,QAAvB,CAAtB;AACA,IAAM/C,GAAG,GAAG8C,aAAa,CAAC9C,GAA1B;AACA,IAAIQ,KAAK,GAAG,IAAIC,KAAJ,EAAZ;;ADJQ,ACKRD,KAAK,CAACS,GDLWlB,GCKjB,GAAe,MDLP,CAAsBC,GAAtB,EAA2BC,ACKV,MDLjB,EAAmCC,IAAnC,EAAwC;AAC9C,ACMA,MDNMC,MAAM,GAAGC,QAAQ,CAACC,CCMbL,GAAX,EAAgBgD,IAAhB,CAAqB,EDNN,CAAuB,OCMhBC,CDNP,CAAf,CCMqB,EAAO;ADL5B,ACMEL,IAAAA,EDNItC,KCMG,CAACuC,CDNG,ECMX,CDNc1C,ACMF8C,GAAZ,EAD0B,CDLN,ACOtB,CDPuB1C,UAAP,CAAkB,IAAlB,CAAhB;AACA,ACOC,GAHD,GDJMC,KAAK,GAAG,IAAIC,KAAJ,EAAd,CAH8C,CAI9C;ACOD,CAND;ADAE,MAAMC,IAAI,GAAGV,GAAG,CAACW,SAAJ,CAAc,CAAd,EAAgBX,GAAG,CAACY,OAAJ,CAAY,GAAZ,CAAhB,EAAkCC,OAAlC,CAA0C,OAA1C,EAAkD,EAAlD,CAAb;AACAL,ACOFA,EDPEA,GCOG,CAACR,CDPC,CAACA,CCOR,EDPE,CCOUA,EDPEA,CCOd,EDPE;AACA,SAAO,IAAIc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,IAAAA,KAAK,CAACS,MAAN,GAAgB,YAAK;AACnB;AACA,UAAIC,KAAJ,EAAUC,KAAV,EAAgBC,MAAhB;;AACA,UAAGnB,MAAM,IAAIA,MAAM,GAAG,CAAtB,EAAwB;AACtB,YAAKO,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACY,MAAzB,EAAiC;AAC/BF,UAAAA,KAAK,GAAGV,KAAK,CAACY,MAAN,GAAeZ,KAAK,CAACW,KAA7B;AACAA,UAAAA,KAAK,GAAGlB,MAAR;AACAmB,UAAAA,MAAM,GAAGnB,MAAM,GAAGiB,KAAlB;AACD,SAJD,MAIO;AACLA,UAAAA,KAAK,GAAGV,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACY,MAA5B;AACAD,UAAAA,KAAK,GAAGlB,MAAM,GAAGiB,KAAjB;AACAE,UAAAA,MAAM,GAAGnB,MAAT;AACD;AACF,OAVD,MAUO;AACLkB,QAAAA,KAAK,GAAGX,KAAK,CAACW,KAAd;AACAC,QAAAA,MAAM,GAAGZ,KAAK,CAACY,MAAf;AACD,OAhBkB,CAkBnB;;;AACAjB,MAAAA,MAAM,CAACiB,MAAP,GAAgBA,MAAhB;AACAjB,MAAAA,MAAM,CAACgB,KAAP,GAAeA,KAAf;AACAb,MAAAA,OAAO,CAACe,SAAR,CAAkBb,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BW,KAA/B,EAAsCC,MAAtC,EArBmB,CAuBnB;;AACA,UAAME,MAAM,GAAGnB,MAAM,CAACoB,SAAP,CAAiBb,IAAjB,CAAf,CAxBmB,CAyBnB;;AACA,UAAIc,IAAJ,EAAUC,GAAV,EAAeC,CAAf,EAAkBC,GAAlB;AACAF,MAAAA,GAAG,GAAGG,IAAI,CAACN,MAAM,CAACO,KAAP,CAAa,SAAb,EAAwB,CAAxB,CAAD,CAAV;AACAF,MAAAA,GAAG,GAAGF,GAAG,CAACK,MAAV;AACAN,MAAAA,IAAI,GAAG,IAAIO,UAAJ,CAAeJ,GAAf,CAAP;AAEAD,MAAAA,CAAC,GAAG,CAAJ;;AACA,aAAQA,CAAC,GAAGC,GAAZ,EAAkB;AAChBH,QAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUD,GAAG,CAACO,UAAJ,CAAeN,CAAf,CAAV;AACAA,QAAAA,CAAC;AACF,OAnCkB,CAqCnB;;;AACA,UAAI,CAACxB,IAAL,EAAWA,IAAI,aAAM+B,IAAI,CAACC,GAAL,EAAN,cAAoBxB,IAAI,CAACG,OAAL,CAAa,QAAb,EAAsB,EAAtB,CAApB,CAAJ,CAtCQ,CAuCnB;;AACA,UAAMsB,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAACZ,IAAD,CAAV,EAAkBtB,IAAlB,EAAyB;AAACQ,QAAAA,IAAI,EAACA;AAAN,OAAzB,CAAb;AACAK,MAAAA,OAAO,CAACoB,IAAD,CAAP;AACD,KA1CD;;AA2CA3B,IAAAA,KAAK,CAAC6B,OAAN,GAAgB,UAACC,CAAD;AAAA,aAAOtB,MAAM,CAACsB,CAAD,CAAb;AAAA,KAAhB;AACD,GA7CM,CAAP;AA8CD;;AAEM,SAASC,UAAT,CAAoBvC,GAApB,EAAyBC,MAAzB,EAAgC;AAErC,MAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AAEA,MAAMP,IAAI,GAAGF,GAAG,CAACwC,KAAJ,CAAU,8BAAV,EAA0C,CAA1C,CAAb;AACA,MAAMC,QAAQ,GAAGzC,GAAG,CAACwC,KAAJ,CAAU,sBAAV,EAAkC,CAAlC,CAAjB;AACA,MAAIE,GAAG,GAAGD,QAAQ,CAAC9B,SAAT,CAAmB8B,QAAQ,CAACE,WAAT,CAAqB,GAArB,IAA4B,CAA/C,EAAiDF,QAAQ,CAACX,MAA1D,CAAV;AACA,MAAGY,GAAG,IAAI,KAAV,EAAgBA,GAAG,GAAG,MAAN,CATqB,CASR;;AAC7BlC,EAAAA,KAAK,CAACR,GAAN,GAAYA,GAAZ;AAEA,SAAO,IAAIc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,IAAAA,KAAK,CAACS,MAAN,GAAgB,YAAK;AACnB,UAAIC,KAAJ,EAAUC,KAAV,EAAgBC,MAAhB;;AACA,UAAGnB,MAAM,IAAIA,MAAM,GAAG,CAAtB,EAAwB;AACtB,YAAKO,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACY,MAAzB,EAAiC;AAC/BF,UAAAA,KAAK,GAAGV,KAAK,CAACY,MAAN,GAAeZ,KAAK,CAACW,KAA7B;AACAA,UAAAA,KAAK,GAAGlB,MAAR;AACAmB,UAAAA,MAAM,GAAGnB,MAAM,GAAGiB,KAAlB;AACD,SAJD,MAIO;AACLA,UAAAA,KAAK,GAAGV,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACY,MAA5B;AACAD,UAAAA,KAAK,GAAGlB,MAAM,GAAGiB,KAAjB;AACAE,UAAAA,MAAM,GAAGnB,MAAT;AACD;AACF,OAVD,MAUO;AACLkB,QAAAA,KAAK,GAAGX,KAAK,CAACW,KAAd;AACAC,QAAAA,MAAM,GAAGZ,KAAK,CAACY,MAAf;AACD;;AACDjB,MAAAA,MAAM,CAACiB,MAAP,GAAgBA,MAAhB;AACAjB,MAAAA,MAAM,CAACgB,KAAP,GAAeA,KAAf;AACAb,MAAAA,OAAO,CAACe,SAAR,CAAkBb,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BW,KAA/B,EAAsCC,MAAtC;AAEA,UAAME,MAAM,GAAGnB,MAAM,CAACoB,SAAP,iBAA0BmB,GAA1B,EAAf;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AAGD,KAxBD;AAyBD,GA1BM,CAAP;AA2BD","file":"path_to_file.7aee7b52.js","sourceRoot":"../src","sourcesContent":["export  function base64ToFile(src, resize, name){\n  const canvas = document.createElement(\"canvas\")\n  const context = canvas.getContext('2d')\n  const image = new Image()\n  // これでMIMEタイプが取れてると思うけど若干不安...\n  const type = src.substring(0,src.indexOf(\";\")).replace('data:','')\n  image.src = src\n  return new Promise((resolve, reject) => {\n    image.onload = (() =>{  \n      // リサイズ後のサイズを計算する  \n      let ratio,width,height;\n      if(resize && resize > 0){\n        if ( image.width > image.height ){\n          ratio = image.height / image.width\n          width = resize\n          height = resize * ratio\n        } else {\n          ratio = image.width / image.height\n          width = resize * ratio\n          height = resize\n        }\n      } else {\n        width = image.width\n        height = image.height\n      }\n      \n      // canvasをリサイズ後のサイズで作る\n      canvas.height = height\n      canvas.width = width\n      context.drawImage(image, 0, 0, width, height)\n  \n      // canvasからbase64画像データを取得\n      const base64 = canvas.toDataURL(type)\n      // base64からBlobデータを作成\n      let barr, bin, i, len\n      bin = atob(base64.split('base64,')[1])\n      len = bin.length;\n      barr = new Uint8Array(len)\n  \n      i = 0\n      while ( i < len ) {\n        barr[i] = bin.charCodeAt(i)\n        i++\n      } \n      \n      // 引数にnameが設定されていない場合\n      if (!name) name = `${Date.now()}.${type.replace('image/','')}`\n      // fileオブジェクトを作成\n      const file = new File( [barr], name , {type:type})\n      resolve(file)\n    })\n    image.onerror = (e) => reject(e)\n  })\n}\n\nexport function pathToFile(src, resize){\n\n  const canvas = document.createElement(\"canvas\")\n  const context = canvas.getContext('2d')\n  const image = new Image()\n  \n  const name = src.match(\".+/(.+?)\\.[a-z]+([\\?#;].*)?$\")[1];\n  const name_ext = src.match(\".+/(.+?)([\\?#;].*)?$\")[1];\n  let ext = name_ext.substring(name_ext.lastIndexOf('.') + 1,name_ext.length);\n  if(ext == 'jpg')ext = 'jpeg' // なんか image/jpg　でbase64化すると image/png　になってしまう。\n  image.src = src\n\n  return new Promise((resolve, reject) => {\n    image.onload = (() =>{  \n      let ratio,width,height;\n      if(resize && resize > 0){\n        if ( image.width > image.height ){\n          ratio = image.height / image.width\n          width = resize\n          height = resize * ratio\n        } else {\n          ratio = image.width / image.height\n          width = resize * ratio\n          height = resize\n        }\n      } else {\n        width = image.width\n        height = image.height\n      }\n      canvas.height = height\n      canvas.width = width\n      context.drawImage(image, 0, 0, width, height)\n      \n      const base64 = canvas.toDataURL(`image/${ext}`);\n      console.log(base64)\n\n\n    })\n  })\n}","import {pathToFile,base64ToFile} from '../../../index'\n\nconst targetElement = document.querySelector('.image')\nconst src = targetElement.src\nvar image = new Image();\nimage.onload = function(){\n\n  pathToFile(src).then((res)=>{\n    console.log(res)\n  //  window.location = window.URL.createObjectURL(res)\n  })  \n}\n\nimage.src = src;\n\n"]}