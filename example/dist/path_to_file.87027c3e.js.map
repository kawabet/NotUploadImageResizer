{"version":3,"sources":["../../index.js","js/path_to_file.js"],"names":["base64ToFile","src","resize","name","canvas","document","createElement","context","getContext","image","Image","type","substring","indexOf","replace","Promise","resolve","reject","onload","ratio","width","height","drawImage","base64","toDataURL","barr","bin","i","len","atob","split","length","Uint8Array","charCodeAt","Date","now","file","File","onerror","e","pathToFile","name_ext","match","ext","lastIndexOf","getOrientation","reader","FileReader","readAsArrayBuffer","addEventListener","orientation","dv","DataView","result","app1MarkerStart","getUint16","littleEndian","getUint8","count","start","OrientationTransformed","readAsDataURL","img","ctx","transform","targetElement","querySelector","then","res","console","info"],"mappings":"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","file":"path_to_file.87027c3e.js","sourceRoot":"../src","sourcesContent":["/**\n * \n * @param {*} src \n * @param {*} resize \n * @param {*} name \n */\nexport  function base64ToFile(src, resize, name){\n  const canvas = document.createElement(\"canvas\")\n  const context = canvas.getContext('2d')\n  const image = new Image()\n  // これでMIMEタイプが取れてると思うけど若干不安...\n  const type = src.substring(0,src.indexOf(\";\")).replace('data:','')\n  image.src = src\n  return new Promise((resolve, reject) => {\n    image.onload = (() =>{  \n      // リサイズ後のサイズを計算する  \n      let ratio,width,height;\n      if(resize && resize > 0){\n        if ( image.width > image.height ){\n          ratio = image.height / image.width\n          width = resize\n          height = resize * ratio\n        } else {\n          ratio = image.width / image.height\n          width = resize * ratio\n          height = resize\n        }\n      } else {\n        width = image.width\n        height = image.height\n      }\n      \n      // canvasをリサイズ後のサイズで作る\n      canvas.height = height\n      canvas.width = width\n      context.drawImage(image, 0, 0, width, height)\n  \n      // canvasからbase64画像データを取得\n      const base64 = canvas.toDataURL(type)\n      // base64からBlobデータを作成\n      let barr, bin, i, len\n      bin = atob(base64.split('base64,')[1])\n      len = bin.length;\n      barr = new Uint8Array(len)\n  \n      i = 0\n      while ( i < len ) {\n        barr[i] = bin.charCodeAt(i)\n        i++\n      } \n      \n      // 引数にnameが設定されていない場合\n      if (!name) name = `${Date.now()}.${type.replace('image/','')}`\n      // fileオブジェクトを作成\n      const file = new File( [barr], name , {type:type})\n      resolve(file)\n    })\n    image.onerror = (e) => reject(e)\n  })\n}\n\n//**\n/* \n* @param {*} src \n* @param {*} resize\n*/\nexport function pathToFile(src, resize){\n\n  const canvas = document.createElement(\"canvas\")\n  const context = canvas.getContext('2d')\n  const image = new Image()\n  \n\n  const name_ext = src.match(\".+/(.+?)([\\?#;].*)?$\")[1];\n  let ext = name_ext.substring(name_ext.lastIndexOf('.') + 1,name_ext.length);\n  if(ext == 'jpg')ext = 'jpeg' // なんか image/jpg　でbase64化すると image/png　になってしまう。\n  const type = `images/${ext}`\n  image.src = src\n\n  return new Promise((resolve, reject) => {\n    image.onload = (() =>{  \n      let ratio,width,height;\n      if(resize && resize > 0){\n        if ( image.width > image.height ){\n          ratio = image.height / image.width\n          width = resize\n          height = resize * ratio\n        } else {\n          ratio = image.width / image.height\n          width = resize * ratio\n          height = resize\n        }\n      } else {\n        width = image.width\n        height = image.height\n      }\n      canvas.height = height\n      canvas.width = width\n      context.drawImage(image, 0, 0, width, height)\n      \n      const base64 = canvas.toDataURL(type);\n      // base64からBlobデータを作成\n      let barr, bin, i, len\n      bin = atob(base64.split('base64,')[1])\n      len = bin.length;\n      barr = new Uint8Array(len)\n  \n      i = 0\n      while ( i < len ) {\n        barr[i] = bin.charCodeAt(i)\n        i++\n      } \n      \n      // fileオブジェクトを作成\n      const file = new File( [barr], name_ext , {type:type})\n      resolve(file)\n\n\n    })\n    image.onerror = (e) => reject(e)\n  })\n}\n\n/**\n* \n* @param {*} file \n* @param {*} orientation \n*/\nexport  function getOrientation(file){\n  const reader = new FileReader()\n\n  if( file.type.indexOf('image') < 0){　  // 画像ファイル以外の場合は処理を中断\n    return false;\n  }\n\n\n  return new Promise((resolve, reject) => {\n    reader.readAsArrayBuffer(file)\n    reader.addEventListener('load', () => {\n      let orientation = 0\n      const dv = new DataView(reader.result)\n      let app1MarkerStart = 2\n      // もし JFIF で APP0 Marker がある場合は APP1 Marker の取得位置をずらす\n      if (dv.getUint16(app1MarkerStart) !== 65505) {\n        const length = dv.getUint16(4)\n        app1MarkerStart += length + 2\n      }\n      if (dv.getUint16(app1MarkerStart) !== 65505) {\n        return 0\n      }\n      // エンディアンを取得\n      const littleEndian = dv.getUint8(app1MarkerStart + 10) === 73\n      // フィールドの数を確認\n      const count = dv.getUint16(app1MarkerStart + 18, littleEndian)\n      for (let i = 0; i < count; i++) {\n        const start = app1MarkerStart + 20 + i * 12\n        const tag = dv.getUint16(start, littleEndian)\n        // Orientation の Tag は 274\n        if (tag === 274) {\n          // Orientation は Type が SHORT なので 2byte だけ読む\n          orientation = dv.getUint16(start + 8, littleEndian)\n        }\n      }\n      resolve(orientation)\n    });\n  })\n}\n\n/**\n * \n * @param {*} file \n * @param {*} orientation \n */\nexport  function OrientationTransformed(file, orientation){\n\n  const reader = new FileReader()\n  if( file.type.indexOf('image') < 0){　  // 画像ファイル以外の場合は処理を中断\n    return false;\n  }\n\n  return new Promise((resolve, reject) => {\n    reader.readAsDataURL(file)\n    reader.addEventListener('load', () => {\n      let img = new Image()\n      img.src = reader.result\n      const type = reader.result.substring(0,reader.result.indexOf(\";\")).replace('data:','')\n      img.addEventListener('load', () => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n  \n        if ([5,6,7,8].indexOf(orientation) > -1) {\n          canvas.width = img.height\n          canvas.height = img.width\n        } else {\n          canvas.width = img.width\n          canvas.height = img.height\n        }\n        switch (orientation) {\n          case 2: ctx.transform(-1, 0, 0, 1, img.width, 0); break\n          case 3: ctx.transform(-1, 0, 0, -1, img.width, img.height); break\n          case 4: ctx.transform(1, 0, 0, -1, 0, img.height); break\n          case 5: ctx.transform(0, 1, 1, 0, 0, 0); break\n          case 6: ctx.transform(0, 1, -1, 0, img.height, 0); break\n          case 7: ctx.transform(0, -1, -1, 0, img.height, img.width); break\n          case 8: ctx.transform(0, -1, 1, 0, 0, img.width); break\n        }\n        ctx.drawImage(img, 0, 0)\n        const base64 = canvas.toDataURL(type);\n        resolve(base64)   \n      })\n    })\n  });\n}","import {pathToFile,base64ToFile} from '../../../index'\n\nconst targetElement = document.querySelector('.image')\nconst src = targetElement.src\nvar image = new Image();\nimage.onload = function(){\n\n  pathToFile(src).then((res)=>{\n    console.info(res) // 仕上がり\n\n  })  \n}\n\nimage.src = src;\n\n"]}